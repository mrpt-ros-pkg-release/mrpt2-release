version: 2
jobs:
  full-u18.04-bionic:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DMRPT_ALLOW_LGPLV3=ON -DCMAKE_VERBOSE_MAKEFILE=ON -H. -Bbuild
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make gcov -C build
      - run: make -C build
      - run: bash <(curl -s https://codecov.io/bash) -X gcov -y .codecov.yml -s build
  full-u19.10-eoan:
    docker:
      - image: mrpt/mrpt-build-env:full-eoan
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DMRPT_ALLOW_LGPLV3=ON -DCMAKE_VERBOSE_MAKEFILE=ON -H. -Bbuild
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make -C build
  clang-u18.04-bionic:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run:
          name: Generate cmake files
          command: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DMRPT_ALLOW_LGPLV3=ON -DCMAKE_VERBOSE_MAKEFILE=ON -H. -Bbuild
          environment:
            CC: /usr/bin/clang-6.0
            CXX: /usr/bin/clang++-6.0
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make -C build
  headless-u18.04-bionic:
    docker:
      - image: mrpt/mrpt-build-env:headless-bionic
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DMRPT_ALLOW_LGPLV3=ON -DCMAKE_VERBOSE_MAKEFILE=ON -H. -Bbuild
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make -C build
  minimal-u18.04-bionic:
    docker:
      - image: mrpt/mrpt-build-env:minimal-bionic
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DDISABLE_PYTHON_BINDINGS=On -DEIGEN_USE_EMBEDDED_VERSION=On -DMRPT_ALLOW_LGPLV3=ON -DCMAKE_VERBOSE_MAKEFILE=ON -H. -Bbuild
      - run: make -C build tests_build_all
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make -C build
  clang-format-lint:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run: pip3 install --user -r travis/python_reqs.txt
      - run:
          name: Run lint task
          command: bash travis/check_style.sh
          environment:
            TASK: lint_all
  macos:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/project
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run: brew install cmake
      - run: brew install boost
      - run: brew install nasm
      - run: cmake -DBUILD_EXAMPLES=On -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DDISABLE_PYTHON_BINDINGS=On -DEIGEN_USE_EMBEDDED_VERSION=On -DCMAKE_VERBOSE_MAKEFILE=ON -DMRPT_ALLOW_LGPLV3=ON -H. -Bbuild
      - run: make -j2 -C build tests_build_all
      - run: make -j2 CTEST_OUTPUT_ON_FAILURE=1 test -C build
      - run: make -j2 -C build
workflows:
  version: 2
  build:
    jobs:
      - full-u18.04-bionic
      - full-u19.10-eoan
      - headless-u18.04-bionic
      - minimal-u18.04-bionic
      - clang-u18.04-bionic
      - clang-format-lint
      - macos
